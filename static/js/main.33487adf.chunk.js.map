{"version":3,"sources":["components/Goods/Goods.tsx","constants.js","components/SortPanel/SortPanel.tsx","App.tsx","index.tsx"],"names":["Goods","goods","map","good","SORT_TYPE","goodsFromServer","SortPanel","sortField","setSortField","isReversed","setIsReversed","isShowResetButton","className","type","classNames","onClick","isReversedSort","App","useState","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,S,gBCNlCC,EACD,WADCA,EAEH,SAGGC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UCLWC,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEMC,EAAoBJ,GAAaE,EAEvC,OACE,sBAAKG,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAW,CAAE,WAAYP,IAAcH,KACpEW,QAAS,kBAAMP,EAAaJ,IAH9B,iCAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBE,IAAW,CAAE,WAAYP,IAAcH,KACvEW,QAAS,kBAAMP,EAAaJ,IAH9B,4BAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBE,IAAW,CAAE,YAAaL,KAC1DM,QAAS,kBAAML,GAAc,SAACM,GAAD,OAAqBA,MAHpD,qBAQCL,GACC,wBACEI,QAAS,WACPP,EAAa,IACbE,GAAc,IAEhBG,KAAK,SACLD,UAAU,4BANZ,uBCPD,IAAMK,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOX,EAAP,KAAkBC,EAAlB,KACA,EAAoCU,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBC,EAAnB,KAEMS,EAjCR,SACElB,EACAM,EACAE,GAEA,IAAMU,EAAW,YAAOlB,GAqBxB,OAnBIM,GACFY,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQf,GACN,KAAKH,EACH,OAAOiB,EAAME,cAAcD,GAE7B,KAAKlB,EACH,OAAOiB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXf,GACFU,EAAYM,UAGPN,EAOaO,CAAerB,EAAiBE,EAAWE,GAE/D,OACE,sBAAKG,UAAU,kBAAf,UACE,cAAC,EAAD,CACEL,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAGjB,cAAC,EAAD,CAAOT,MAAOkB,QClDpBQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33487adf.chunk.js","sourcesContent":["type Props = {\n  goods: string[];\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n  </ul>\n);\n","export const SORT_TYPE = {\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport { SORT_TYPE } from '../../constants';\n\ntype Props = {\n  sortField: string,\n  setSortField: (value: string) => void,\n  isReversed: boolean,\n  setIsReversed: (value: boolean | ((prevValue: boolean) => boolean)) => void,\n};\n\nexport const SortPanel: React.FC<Props> = ({\n  sortField,\n  setSortField,\n  isReversed,\n  setIsReversed,\n}) => {\n  const isShowResetButton = sortField || isReversed;\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={`button is-info ${classNames({ 'is-light': sortField !== SORT_TYPE.ALPHABET })}`}\n        onClick={() => setSortField(SORT_TYPE.ALPHABET)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-success ${classNames({ 'is-light': sortField !== SORT_TYPE.LENGTH })}`}\n        onClick={() => setSortField(SORT_TYPE.LENGTH)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={`button is-warning ${classNames({ 'is-light': !isReversed })}`}\n        onClick={() => setIsReversed((isReversedSort) => !isReversedSort)}\n      >\n        Reverse\n      </button>\n\n      {isShowResetButton && (\n        <button\n          onClick={() => {\n            setSortField('');\n            setIsReversed(false);\n          }}\n          type=\"button\"\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nimport { Goods } from './components/Goods/Goods';\nimport { SortPanel } from './components/SortPanel/SortPanel';\nimport { SORT_TYPE, goodsFromServer } from './constants';\n\nfunction getSortedGoods(\n  goods: string[],\n  sortField: string,\n  isReversed: boolean,\n): string[] {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_TYPE.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_TYPE.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = getSortedGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <SortPanel\n        sortField={sortField}\n        setSortField={setSortField}\n        isReversed={isReversed}\n        setIsReversed={setIsReversed}\n      />\n\n      <Goods goods={sortedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}